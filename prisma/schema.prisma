// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model User {
  id        String    @id @default(cuid())
  name      String
  email     String    @unique
  telephone String?
  password  String?
  role      Int       @default(1)
  Result    Result[]
  Post      Post[]
  createdAt DateTime  @default(now())
  Message   Message[]
}

model Result {
  id        String   @id @default(cuid())
  userId    String
  User      User     @relation(fields: [userId], references: [id], onDelete: Restrict)
  score     String
  level     String
  createdAt DateTime @default(now())
}

model Post {
  id         String    @id @default(cuid())
  userId     String
  User       User      @relation(fields: [userId], references: [id], onDelete: Restrict)
  title      String
  content    String    @db.Text
  createdAt  DateTime  @default(now())
  Category   Category? @relation(fields: [categoryId], references: [id])
  categoryId String?
}

model Category {
  id   String @id @default(cuid())
  name String
  Post Post[]
}

model Message {
  id        String   @id @default(cuid())
  userId    String
  User      User     @relation(fields: [userId], references: [id], onDelete: Restrict)
  message   String   @db.Text
  createdAt DateTime @default(now())
}
